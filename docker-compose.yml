version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    depends_on:
      - backend
    environment:
      # Vite will use this to know where to call your API
      - VITE_API_URL=http://backend:5000
    volumes:
      # Mount only your app sources and configs, not node_modules/
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/index.html:/app/index.html
      - ./frontend/package.json:/app/package.json
      - ./frontend/vite.config.js:/app/vite.config.js
    stdin_open: true
    tty: true

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '5000:5000'
    depends_on:
      - postgres
      - redis
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/social_dashboard
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    env_file:
      - .env

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_DB=social_dashboard
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  redis:
    image: redis:6-alpine
    ports:
      - '6379:6379'

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A app.celery_app:celery worker --loglevel=info
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/social_dashboard
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    env_file:
      - .env

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A app.celery_app:celery beat --loglevel=info
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/social_dashboard
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    env_file:
      - .env

volumes:
  postgres_data:
